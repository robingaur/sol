/**
 * Definition for binary tree
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode(int x) : val(x), left(NULL), right(NULL) {}
 * };
 */

vector<vector<int>> vec;

void func(TreeNode *A, int S, vector<int> &V)
{
    if (A == NULL)
        return;
    S -= A->val;
    V.push_back(A->val);
    if (S==0 && A->left == NULL && A->right == NULL)
    {
        //vector<int> v(V);
        vec.push_back(V);
    }
    func(A->left, S, V);
    func(A->right, S, V);
    V.pop_back();
}

vector<vector<int> > Solution::pathSum(TreeNode* A, int B)
{
    vec.clear();
    if (A == NULL)
        return vec;
    vector<int> V;
    func(A, B, V);
    return vec;
}
